{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAWC,SAASC,cAAc,QACxCF,EAASG,iBAAiB,UAC1B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIC,GAAaN,EAASO,SAASC,MAAMC,MACzC,MAAMC,GAAYV,EAASO,SAASI,KAAKF,MACnCG,GAAcZ,EAASO,SAASM,OAAOJ,MAC7CL,EAAIU,OAAOC,QACX,IAAK,IAAIF,EAAS,EAAGA,EAASD,EAAYC,IACxCG,EAAcH,EAAS,EAAIP,GAAaI,GACrCO,MAAK,EAACC,SAAEA,EAAQV,MAAEA,MACjBW,EAAArB,GAASsB,OAAOC,QACd,qCAACH,QAAgDV,MAAa,IAGjEc,OAAM,EAACJ,SAAEA,EAAQV,MAAEA,MAClBW,EAAArB,GAASsB,OAAOG,QACd,wBAAsBL,QAAeV,MAAW,IAGxD,SAASQ,EAAcE,EAAUV,GAW/B,OAVgB,IAAIgB,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEP,E,MAAUV,IAEpBkB,EAAO,C,SAAER,E,MAAUV,GAAQ,GAE3BA,GAASE,EAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formData = document.querySelector('form');\nformData.addEventListener('submit', onFormSubmit);\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delayData = +formData.elements.delay.value;\n  const stepData = +formData.elements.step.value;\n  const amountData = +formData.elements.amount.value;\n  evt.target.reset();\n  for (let amount = 0; amount < amountData; amount++)\n    createPromise(amount + 1, (delayData += stepData))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `:белая_галочка: Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `:х: Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  function createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, (delay -= stepData));\n    });\n    return promise;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formData","document","querySelector","addEventListener","evt","preventDefault","delayData","elements","delay","value","stepData","step","amountData","amount","target","reset","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.c6c68728.js.map"}